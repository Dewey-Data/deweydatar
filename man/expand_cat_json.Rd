% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/advan_expand_json.R
\name{expand_cat_json}
\alias{expand_cat_json}
\title{Expand and collapse a categorical JSON column}
\usage{
expand_cat_json(
  dt,
  expand,
  index = "index",
  by = NULL,
  fast = FALSE,
  fun = sum,
  na.rm = TRUE,
  set_key = TRUE
)
}
\arguments{
\item{dt}{data.table object (or something that can be coerced to data.table)}

\item{expand}{String indicating the JSON column to be expanded.}

\item{index}{String indicating the name of the new index column}

\item{by}{Character vector indicating the variables to group by after expanding. Set to \code{NULL} to aggregate across all initial rows, or set to \code{FALSE} to not aggregate at all (this will also add an \code{initial_rowno} column showing the original row number).}

\item{fast}{Assumes that all the JSON vectors are of the exact same categories, and adds the values together rather than using whatever is in \code{fun}.}

\item{fun}{Function that takes a vector and returns a single value to use when collapsing to the \code{by} level. Requires \code{fast = FALSE}.}

\item{na.rm}{Ignore missing values of \code{expand}}

\item{set_key}{Set the key of \code{dt} to \code{by}. Set to \code{FALSE} if you have already set the key or want it returned without key.}
}
\description{
This function accepts a \code{data.table} along with a set of grouping
variables and a character-format category-style JSON column (i.e. starts
with curly brackets, not square).
It expands that JSON column into long format,
with one row per observation per value of the JSON column, and then
collapses everything according to the set of grouping variables.
}
\examples{

# Raw example data for expanding/collapsing
patterns <- data.table::data.table(state_fips = c(123,123,352,352),
                                   cat_origin = c('{"a": "2", "b": "10"}', # 123
                                                  '{"a": "9", "b": "5"}',  # 123
                                                  '{"a": "4", "b": "5"}',  # 352
                                                  '{"a": "9", "b": "7"}')) # 352

expand_cat_json(patterns, 'cat_origin', by = 'state_fips')[]
}
